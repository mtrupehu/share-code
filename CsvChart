package dev.enblng.api;
import java.awt.Color;
import java.awt.Rectangle;
import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartUtils;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.StandardXYToolTipGenerator;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYBarRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.ui.RectangleInsets;
import org.jfree.chart.util.ShapeUtils;
import org.jfree.data.time.Day;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;

public class CsvChart {
    public static void main(String[] args) {
        // Read the CSV file and extract the necessary data into two arrays
        String csvFile = "src/main/resources/test.csv";

        // Read the CSV file and create time series dataset
        // Create a new TimeSeriesCollection for the duration data
        TimeSeriesCollection durationDataset = new TimeSeriesCollection();
        TimeSeries durationSeries = new TimeSeries("Duration of Report (ms)");
        durationDataset.addSeries(durationSeries);
        try {
            CSVParser parser = CSVParser.parse(new File(csvFile), StandardCharsets.UTF_8, CSVFormat.DEFAULT.withHeader());
            for (CSVRecord record : parser) {
                System.err.println(record);
                Date date = new SimpleDateFormat("yyyy-MM-dd").parse(record.get("date of report"));
                long duration = Long.parseLong(record.get("Duration of Report"));
                durationSeries.add(new Day(date), duration);
            }
        } catch (IOException e) {
            throw new RuntimeException(e);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }

        // Create the chart
        JFreeChart chart = ChartFactory.createTimeSeriesChart(
                "Daily Records Processed", // chart title
                "Date", // domain axis label
                "Count / Duration (ms)", // range axis label
                durationDataset, // data
                true, // legend
                true, // tooltips
                false // urls
        );
        chart.setBackgroundPaint(Color.WHITE);
        chart.setBorderVisible(false);
        chart.setPadding(new RectangleInsets(10, 10, 10, 10));


        // Customize the appearance of the chart
        XYPlot plot = chart.getXYPlot();
        plot.setBackgroundPaint(Color.LIGHT_GRAY);
        plot.setDomainGridlinePaint(Color.WHITE);
        plot.setRangeGridlinePaint(Color.WHITE);
        plot.setAxisOffset(new RectangleInsets(5, 5, 5, 5));
        plot.setDomainCrosshairVisible(true);
        plot.setRangeCrosshairVisible(true);

        // Set the date axis
        DateAxis dateAxis = (DateAxis) plot.getDomainAxis();
        dateAxis.setDateFormatOverride(new SimpleDateFormat("MMM-yyyy"));

        // Set the record count range axis
        NumberAxis recordCountAxis = new NumberAxis("Records Processed");
        recordCountAxis.setAutoRangeIncludesZero(false);
        plot.setRangeAxis(0, recordCountAxis);

        XYLineAndShapeRenderer recordCountRenderer = new XYLineAndShapeRenderer(true, false);
        recordCountRenderer.setSeriesPaint(0, Color.BLUE);
        recordCountRenderer.setSeriesShapesVisible(0, true);

        recordCountRenderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator(
                StandardXYToolTipGenerator.DEFAULT_TOOL_TIP_FORMAT,
                new SimpleDateFormat("MMM-yyyy"), new java.text.DecimalFormat("#,##0")
        ));
        recordCountRenderer.setSeriesShape(0, ShapeUtils.createDiamond(5.0f));

        plot.setRenderer(0, recordCountRenderer);

// Set the duration range axis
        NumberAxis durationAxis = new NumberAxis("Duration (ms)");
        durationAxis.setAutoRangeIncludesZero(false);
        plot.setRangeAxis(1, durationAxis);

        XYBarRenderer durationRenderer = new XYBarRenderer(0.20);
        durationRenderer.setSeriesPaint(0, Color.ORANGE);

        durationRenderer.setDefaultToolTipGenerator(new StandardXYToolTipGenerator(
                StandardXYToolTipGenerator.DEFAULT_TOOL_TIP_FORMAT,
                new SimpleDateFormat("MMM-yyyy"), new java.text.DecimalFormat("#,##0")
        ));
        // Add the series to the duration renderer
        durationRenderer.setSeriesVisibleInLegend(0, false);
        plot.setRenderer(1, durationRenderer);
        plot.setDataset(1, durationDataset);
        plot.mapDatasetToRangeAxis(1, 1);

        plot.setRenderer(1, durationRenderer);

        // Display the chart in a frame
        ChartFrame frame = new ChartFrame("Daily Records Processed", chart);
        frame.pack();
        frame.setVisible(true);

        // Save the chart to a JPEG file
        try {
            ChartUtils.saveChartAsJPEG(new java.io.File("src/main/resources/chart.jpg"), chart, 1024, 1024);
        } catch (java.io.IOException e) {
            System.err.println("Problem occurred creating chart.");
        }
    }
}
